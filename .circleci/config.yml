version: 2.1

aliases:
  - &yarn-cache
    v4-yarn-cache

commands:
  setup-project:
    steps:
      - checkout
      - restore_cache:
          keys:
            - *yarn-cache
      - run:
          name: Install Node 10 and Yarn
          command: |
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install v10
            nvm alias default v10
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get install yarn
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run:
          name: Start Docker
          command: |
            set -x
            make build
            docker-compose up -d
            sleep 15
      - run:
          name: Install Projects
          command: make install
      - save_cache:
          key: *yarn-cache
          paths:
            - ~/.cache/yarn

  commit-and-push:
    parameters:
      message:
        type: string
        default: "Auto build from master"
      files:
        type: string
      destination_repo:
        type: string
      ssh_key_fingerprint:
        type: string
    steps:
      - run:
          name: Clear previously applied SSH key
          command: |
            > ~/.ssh/config
      - add_ssh_keys:
          fingerprints:
            - << parameters.ssh_key_fingerprint >>
      - run:
          name: Configure git
          command: |
            git config --global user.name "⬅️✌️➡️"
            git config --global user.email "no-reply@drupal.org"
      - run:
          name: Overwrite files with build
          command: |
            cp -R << parameters.files >> ~/build-files
            git clone << parameters.destination_repo >> ~/build-repo
            rm -rf ~/build-files/.git
            mv ~/build-repo/.git ~/build-files/.git

      - run:
          name: Add and push
          command: |
              cd ~/build-files
              git add .
              if ! git diff-index --quiet HEAD --; then
                git commit -m "<< parameters.message >>"
                git push origin master
              fi
              sudo rm -rf ~/build-files
              sudo rm -rf ~/build-repo

jobs:
  test_node:
    machine: true
    steps:
      - setup-project
      - run:
          name: Install Chrome
          command: |
            sudo apt-get update
            sudo apt-get install lsb-release libappindicator3-1
            curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome.deb
            sudo sed -i 's|HERE/chrome"|HERE/chrome" --no-sandbox|g' /opt/google/chrome/google-chrome
            rm google-chrome.deb
      - run:
          name: Build projects
          command: yarn build
      - run:
          name: Run tests
          command: |
            docker exec -it drupal_admin_ui_drupal drush user:password admin admin
            yarn test
      - store_test_results:
          path: ~/project/packages/admin-ui/reports
      - store_artifacts:
          path: ~/project/packages/admin-ui/reports

  test_drupal:
    machine: true
    steps:
      - setup-project
      - run:
          name: Run tests
          command: docker exec -it drupal_admin_ui_drupal composer test
      - store_test_results:
          path: ~/project/demo/reports

  dist:
    machine: true
    steps:
      - setup-project
      - run:
          name: Build admin-ui package
          command: yarn workspace @drupal/admin-ui build
      - run:
          name: Copy composer file
          command: cp ~/project/.circleci/drupal-admin-ui--composer.json ~/project/packages/admin-ui/build/composer.json
      # This pushes to https://github.com/jsdrupal/drupal-admin-ui-dist
      # which is then distributed to https://packagist.org/packages/justafish/drupal-admin-ui
      - commit-and-push:
          files: ~/project/packages/admin-ui/build
          destination_repo: git@github.com:jsdrupal/drupal-admin-ui-dist.git
          ssh_key_fingerprint: "82:b8:cc:fe:02:24:17:b1:31:ba:dc:30:e1:01:7a:df"
      # This pushes to https://github.com/jsdrupal/drupal-admin-ui-support-dist
      # which is then distributed at https://packagist.org/packages/justafish/drupal-admin-ui-support
      - commit-and-push:
          files: ~/project/admin_ui_support
          destination_repo: git@github.com:jsdrupal/drupal-admin-ui-support-dist.git
          ssh_key_fingerprint: "6c:c9:15:82:34:e7:30:e2:91:1b:ea:e2:06:b2:cf:e0"
      # This builds to https://github.com/jsdrupal/drupal-admin-ui-demo for the composer create-project demo
      # which is distributed from https://packagist.org/packages/jsdrupal/drupal-admin-ui-demo
      - run:
          name: Reset composer.json and composer.lock
          command: |
            rm -f demo/composer.json demo/composer.lock
            cp demo/templates/composer.json demo/composer.json
            cp demo/templates/composer.lock demo/composer.lock
            rm -rf demo/templates
      # Reset vfancy, otherwise composer will complain that "The .git directory is missing from docroot/vfancy"
      # and won't run update
      - run:
          name: Reset vfancy
          command: |
            docker exec -it drupal_admin_ui_drupal rm -rf docroot/vfancy/*
            docker exec -it drupal_admin_ui_drupal /bin/sh -c "cd docroot/vfancy && \
            git init && \
            git remote add origin https://github.com/jsdrupal/drupal-admin-ui-dist.git && \
            git remote add composer https://github.com/jsdrupal/drupal-admin-ui-dist.git && \
            git fetch origin && \
            git reset --hard origin/master"
      - run:
          name: Refresh composer.lock to point to new admin-ui-support commit
          command: docker exec -it drupal_admin_ui_drupal composer update justafish/drupal-admin-ui-support --lock
      - commit-and-push:
          message: "Auto update from master"
          files: ~/project/demo
          destination_repo: git@github.com:jsdrupal/drupal-admin-ui-demo.git
          ssh_key_fingerprint: "1e:cb:02:bc:68:40:3c:31:40:5f:45:b5:55:c8:02:24"

workflows:
  version: 2
  test:
    jobs:
      - test_node
      - test_drupal
      - dist:
          requires:
            - test_node
            - test_drupal
          filters:
           branches:
            only:
              - master
